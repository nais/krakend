name: Publish Helm Charts
on:
  push:
    tags:
      - '*.*.*'

env:
  HELM_EXPERIMENTAL_OCI: 1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-image

jobs:
  push_helm_to_registry:
    name: Push Helm Chart GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - id: meta
        run: |
          echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: krakend-operator
          repository: ${{ github.repository }}
          tag: ${{ steps.meta.outputs.tag }}
          registry: ${{ env.REGISTRY }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
      - uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: krakend-operator-crds
          repository: ${{ github.repository }}
          tag: ${{ steps.meta.outputs.tag }}
          registry: ${{ env.REGISTRY }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
  push_operator_image_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config: .github/buildkitd.toml
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve author data
        run: |
          echo AUTHOR=$(curl -sSL ${{ github.event.repository.owner.url }} | jq -r '.name') >> $GITHUB_ENV
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.authors=${{ env.AUTHOR }}
      - name: Build container image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
