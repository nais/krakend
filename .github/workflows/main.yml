name: Container Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - "debugapp/**"
      - ".github/workflows/debugapp.yml"
      - ".github/workflows/test.yml"
      - ".github/workflows/updatechart.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_REPOSITORY: oci://europe-north1-docker.pkg.dev/nais-io/nais
  SERVICE_ACCOUNT: gh-krakend
  NAME: krakend-operator

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2
      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  build:
    name: Build and Test code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2
      - name: Restore cached binaries
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/bin
          key: ${{ runner.os }}-bin-${{ hashFiles('Makefile', 'go.mod') }}
      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Install make
        run: sudo apt-get update && sudo apt-get install make
      - name: Vet code
        run: make vet
      - name: Test code
        run: make test
      - name: Build binary
        run: make build
      - name: Cache installed binaries
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/bin
          key: ${{ runner.os }}-bin-${{ hashFiles('Makefile', 'go.mod') }}

  build_push:
    needs:
      - lint
      - build
    outputs:
      version: ${{ steps.build-push-sign.outputs.version }}
    permissions:
      contents: "read"
      id-token: "write"
    name: Build and push to GAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: nais/platform-build-push-sign@main
        id: build-push-sign
        with:
          name: ${{ env.NAME }}
          google_service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          push: true
      - uses: azure/setup-helm@v4
        name: "Setup Helm"
        with:
          version: "3.12.0"
      - name: Build Chart
        run: |-
          sed -i "s/^version: .*/version: ${{ steps.build-push-sign.outputs.version }}/g" charts/krakend-operator/Chart.yaml
          sed -i "s/^version: .*/version: ${{ steps.build-push-sign.outputs.version }}/g" charts/krakend-operator-crds/Chart.yaml

          helm package charts/krakend-operator
          helm package charts/krakend-operator-crds
      - name: Push Chart
        run: |-
          helm push krakend-operator-${{ steps.build-push-sign.outputs.version }}.tgz ${{ env.IMAGE_REPOSITORY }}
          helm push krakend-operator-crds-${{ steps.build-push-sign.outputs.version }}.tgz ${{ env.IMAGE_REPOSITORY }}

  rollout-controller:
    needs:
      - build_push
    runs-on: fasit-deploy
    permissions:
      id-token: write
    steps:
      - uses: nais/fasit-deploy@v2
        with:
          chart: ${{ env.IMAGE_REPOSITORY }}/krakend-operator
          version: ${{ needs.build_push.outputs.version }}

  rollout-crds:
    needs:
      - build_push
    runs-on: fasit-deploy
    permissions:
      id-token: write
    steps:
      - uses: nais/fasit-deploy@v2
        with:
          chart: ${{ env.IMAGE_REPOSITORY }}/krakend-operator-crds
          version: ${{ needs.build_push.outputs.version }}
