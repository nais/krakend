apiserverIP:
krakend:
  webproxy: false
  ingressDomain: external.dev.dev-nais.cloud.nais.io
  ingressClassName: nais-ingress-external
  maskinporten:
    jwkUrl: "https://test.maskinporten.no/jwk"
    issuer: "https://test.maskinporten.no/"
  azuread:
    jwkUrl: https://login.microsoftonline.com/966ac572-f5b7-4bbe-aa88-c76419c0f851/discovery/v2.0/keys
    issuer: https://login.microsoftonline.com/966ac572-f5b7-4bbe-aa88-c76419c0f851/v2.0

customCrds:
  replicator:
    enabled: false

controllerManager:
  kubeRbacProxy:
    args:
    - --secure-listen-address=0.0.0.0:8443
    - --upstream=http://127.0.0.1:8080/
    - --logtostderr=true
    - --v=0
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.14.1
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
  manager:
    args:
    - --health-probe-bind-address=:8081
    - --metrics-bind-address=127.0.0.1:8080
    - --leader-elect
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532
    env:
      debug: "false"
      krakendChartPath: /var/config/krakendinstaller-1.0.0.tgz
      netpolEnabled: "true"
    image:
      repository: europe-north1-docker.pkg.dev/nais-io/nais/images/krakend-operator
      tag: latest
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
  replicas: 1
  serviceAccount:
    annotations: {}
kubernetesClusterDomain: cluster.local
metricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  type: ClusterIP
webhookService:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  type: ClusterIP
