---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: krakends.krakend.nais.io
spec:
  group: krakend.nais.io
  names:
    kind: Krakend
    listKind: KrakendList
    plural: krakends
    singular: krakend
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Krakend is the Schema for the krakends API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KrakendSpec defines the desired state of Krakend
            properties:
              authProviders:
                description: AuthProviders is a list of supported auth providers to
                  be used in ApiEndpoints
                items:
                  description: AuthProvider defines the configuration for an JWT auth
                    provider
                  properties:
                    alg:
                      description: Alg is the algorithm used for signing the JWT token,
                        e.g. RS256
                      type: string
                    issuer:
                      description: Issuer is the issuer of the JWT token
                      type: string
                    jwkUrl:
                      description: JwkUrl is the URL to the JWKs for the auth provider
                      type: string
                    name:
                      description: Name is the name of the auth provider, e.g. maskinporten
                      type: string
                  required:
                  - alg
                  - issuer
                  - jwkUrl
                  - name
                  type: object
                type: array
              deployment:
                description: Deployment defines configuration for the KrakenD deployment
                properties:
                  deploymentType:
                    description: DeploymentType is the type of deployment to use,
                      either deployment or rollout
                    type: string
                  extraConfig:
                    description: ExtraConfig is an object, defining extra config variables
                      to use for the deployment
                    x-kubernetes-preserve-unknown-fields: true
                  extraEnvVars:
                    description: ExtraEnvVars is a list of extra environment variables
                      to add to the deployment
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image is the image configuration to use for the deployment
                    properties:
                      pullPolicy:
                        description: PullPolicy is the pull policy to use for the
                          image
                        type: string
                      registry:
                        description: Registry is the registry to use for the image
                        type: string
                      repository:
                        description: Repository is the repository to use for the image
                        type: string
                      tag:
                        description: Tag is the tag to use for the image
                        type: string
                    type: object
                  replicaCount:
                    description: ReplicaCount is the number of replicas to use for
                      the deployment
                    type: integer
                  resources:
                    description: Resources is the resource requirements for the deployment,
                      as in corev1.ResourceRequirements
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              ingress:
                description: Ingress lets you configure the ingress class, annotations
                  and hosts or tls for an ingress
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations is a list of annotations to add to the
                      ingress
                    type: object
                  className:
                    description: Class is the ingress class to use for the Krakend
                      instance
                    type: string
                  enabled:
                    description: Enabled is whether to enable ingress for the Krakend
                      instance
                    type: boolean
                  hosts:
                    description: Hosts is a list of hosts to add to the ingress
                    items:
                      description: Host defines the host configuration for an ingress
                      properties:
                        host:
                          description: Host is the host name to add to the ingress
                          type: string
                        paths:
                          description: Paths is a list of paths to add to the ingress
                          items:
                            description: Path defines the path configuration for an
                              ingress
                            properties:
                              path:
                                description: Path is the path to add to the ingress
                                type: string
                              pathType:
                                description: PathType is the path type to add to the
                                  ingress
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              ingressHost:
                description: IngressHost is a shortcut for creating a single host
                  ingress with sane defaults, if Ingress is specified this is ignored
                type: string
            type: object
          status:
            description: KrakendStatus defines the observed state of Krakend
            properties:
              synchronizationHash:
                type: string
              synchronizationTimestamp:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
